#!/bin/sh
# -*- mode: shell-script; tab-width: 4; indent-tabs-mode: nil; c-basic-offset: 4 -*-
#
# Copyright (C) 2012, 2013 O.S. Systems Software LTDA.
# Authored-by:  Otavio Salvador <otavio@ossystems.com.br>
#
# This program is free software; you can redistribute it and/or modify
# it under the terms of the GNU General Public License version 2 as
# published by the Free Software Foundation.
#
# This program is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY; without even the implied warranty of
# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
# GNU General Public License for more details.
#
# You should have received a copy of the GNU General Public License along
# with this program; if not, write to the Free Software Foundation, Inc.,
# 51 Franklin Street, Fifth Floor, Boston, MA 02110-1301 USA.
#
# Add options for the script
# Copyright (C) 2013 Freescale Semiconductor, Inc.

NCPU=`grep -c processor /proc/cpuinfo`
CWD=`pwd`
PROGNAME="setup-environment"

usage()
{
    echo -e "\nUsage: source $PROGNAME <build-dir> <SOC>
    <build-dir>: specifies the build directory location (required)
    <SOC>: imx6|sunxi (required)

If undefined, this script will set \$MACHINE to 'wisehmi'(imx6) or 'a20navi'(sunxi).
"

    ls sources/meta-$2-autorock/conf/machine/*.conf > /dev/null 2>&1
    if [ $? -eq 0 ]; then
        echo -e "
Supported machines: `echo; ls sources/meta-$2-autorock/conf/machine/*.conf \
| sed s/\.conf//g | sed -r 's/^.+\///' | xargs -I% echo -e "\t%"`

To build for a machine listed above, run this script as:
MACHINE=<machine> source $PROGNAME <build-dir> <SOC>
"
    fi
}

clean_up()
{
   unset EULA LIST_MACHINES VALID_MACHINE
   unset NCPU CWD TEMPLATES SHORTOPTS LONGOPTS ARGS PROGNAME
   unset generated_config updated
   unset MACHINE SDKMACHINE DISTRO OEROOT
}

# get command line options
SHORTOPTS="h"
LONGOPTS="help"

ARGS=$(getopt --options $SHORTOPTS  \
  --longoptions $LONGOPTS --name $PROGNAME -- "$@" )
# Print the usage menu if invalid options are specified
if [ $? != 0 -o $# -lt 1 ]; then
   usage && clean_up
   return 1
fi

eval set -- "$ARGS"
while true;
do
    case $1 in
        -h|--help)
           usage
           clean_up
           return 0
           ;;
        --)
           shift
           break
           ;;
    esac
done

if [ "$(whoami)" = "root" ]; then
    echo "ERROR: do not use the BSP as root. Exiting..."
fi

case "$2" in
    'imx6'|'sunxi')
        echo "SOC=$2"
        ;;
    *)
        usage && clean_up
        return 1
        ;;
esac

if [ -z "$MACHINE" ]; then
    case "$2" in
        'imx6')
            MACHINE='wisehmi'
            ;;
        'sunxi')
            MACHINE='a20navi'
            ;;
    esac
fi

# Check the machine type specified
LIST_MACHINES=`ls -1 $CWD/sources/meta-$2-autorock/conf/machine`
VALID_MACHINE=`echo -e "$LIST_MACHINES" | grep ${MACHINE}.conf$ | wc -l`
if [ "x$MACHINE" = "x" ] || [ "$VALID_MACHINE" = "0" ]; then
    echo -e "\nThe \$MACHINE you have specified ($MACHINE) is not supported by this build setup"
    usage && clean_up
    return 1
else
    if [ ! -e $1/conf/local.conf.sample ]; then
        echo "Configuring for ${MACHINE}"
    fi
fi

if [ -z "$SDKMACHINE" ]; then
    SDKMACHINE='i686'
fi

if [ -z "$DISTRO" ]; then
    DISTRO='linda'
fi

OEROOT=sources/poky
if [ -e sources/oe-core ]; then
    OEROOT=sources/oe-core
fi

# Ensure all files in sources/base are kept in sync with project root
updated=
file="setup-environment"
f=$CWD/sources/base/$file
if ! cmp -s "$file" "$f"; then
    updated="true"
    [ -e $file ] && chmod u+w $file
    cp $f $file
fi

if [ "$updated" = "true" ]; then
    echo "The project root content has been updated. Please run '$PROGNAME' again."
    return
fi

cd $OEROOT

. ./oe-init-build-env $CWD/$1 > /dev/null

# if conf/local.conf not generated, no need to go further
if [ ! -e conf/local.conf ]; then
    clean_up && return 1
fi

# Clean up PATH, because if it includes tokens to current directories somehow,
# wrong binaries can be used instead of the expected ones during task execution
export PATH="`echo $PATH | sed 's/\(:.\|:\)*:/:/g;s/^.\?://;s/:.\?$//'`"

generated_config=
if [ ! -e conf/local.conf.sample ]; then
    mv conf/local.conf conf/local.conf.sample

    # Generate the local.conf based on the Yocto defaults
    TEMPLATES=$CWD/sources/base/conf 
    grep -v '^#\|^$' conf/local.conf.sample > conf/local.conf
    cat >> conf/local.conf <<EOF

BB_NUMBER_THREADS = '$NCPU'
PARALLEL_MAKE = '-j $NCPU'

DL_DIR ?= "/opt/yocto-rel/share/downloads/"
SSTATE_DIR ?= "/opt/yocto-rel/share/sstate-cache/"
EOF
    # Change settings according environment
    sed -e "s,MACHINE ??=.*,MACHINE ??= '$MACHINE',g" \
        -e "s,SDKMACHINE ??=.*,SDKMACHINE ??= '$SDKMACHINE',g" \
        -e "s,DISTRO ?=.*,DISTRO ?= '$DISTRO',g" \
        -i conf/local.conf

    cp $TEMPLATES/* conf/

    for s in $HOME/.oe $HOME/.yocto; do
        if [ -e $s/site.conf ]; then
            echo "Linking $s/site.conf to conf/site.conf"
            ln -s $s/site.conf conf
        fi
    done

    generated_config=1
fi

# Handle EULA setting
if [ "$2" = "imx6" ]; then
    EULA=1
    if grep -q '^ACCEPT_FSL_EULA\s*=' conf/local.conf; then
        sed -i "s/^#*ACCEPT_FSL_EULA\s*=.*/ACCEPT_FSL_EULA = \"$EULA\"/g" conf/local.conf
    else
        echo "ACCEPT_FSL_EULA = \"$EULA\"" >> conf/local.conf
    fi
fi

if [ -n "$generated_config" ]; then
    cat <<EOF
Your build environment has been configured with:

    MACHINE=$MACHINE
    SDKMACHINE=$SDKMACHINE
    DISTRO=$DISTRO
EOF
else
    echo "Your configuration files at $1 have not been touched."
fi

clean_up
